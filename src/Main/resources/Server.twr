{
  "BuildInfo":{
    "Date":"Wed Oct  5 22:21:07 2022",
    "TypeWriter":{
      "Name":"TypeWriter",
      "Version":"4.7.1",
      "Licence":"MIT"
    }
  },
  "Package":{
    "Name":"Static-Server",
    "Version":"1.0.0",
    "Author":{
      "Contributors":[],
      "Developers":["CoreByte"]
    },
    "InfoVersion":1,
    "Description":"Static",
    "Entrypoints":{
      "Main":"ga.corebyte.Server"
    },
    "ID":"Static-Server",
    "Contact":{
      "Website":"",
      "Source":"",
      "Socials":[]
    },
    "Dependencies":{
      "Git":[],
      "Luvit":["creationix/weblit","creationix/coro-spawn","creationix/mime","luvit/json","creationix/base64"],
      "Dua":[]
    }
  },
  "Code":{
    "ga.corebyte.Server.Static":{
      "Code":"local Path = require(\"path\")\r\nlocal FS = require(\"fs\")\r\nlocal Mimes = require('mime')\r\n\r\nlocal UrlParse = require('url').parse\r\nlocal DecodeUrl = require('querystring').urldecode\r\nlocal function ParseURL(Url)\r\n    return DecodeUrl(UrlParse(Url).pathname)\r\nend\r\n\r\nreturn function (Root)\r\n    Root = Path.normalize(Root)\r\n    local Index = \"index.html\"\r\n\r\n    return function (Request, Response, Next)\r\n        if Request.method ~= 'GET' and Request.method ~= 'HEAD' then return Next() end\r\n        local Url = ParseURL(Request.path)\r\n\r\n        local function ServeFiles(ServeUrl)\r\n            local Stat = FS.statSync(ServeUrl)\r\n            if Stat.type == \"directory\" then\r\n                return ServeFiles(ServeUrl .. Index)\r\n            end\r\n\r\n            if FS.existsSync(ServeUrl) then\r\n                p(ServeUrl)\r\n                Response.headers[\"Content-Type\"] = Mimes.getType(ServeUrl)\r\n                Response.headers[\"Content-Length\"] = Stat.size\r\n                Response.headers[\"Cache-Control\"] = 'public, max-age=' .. 0\r\n                Response.code = 200\r\n                Response.body = ({FS.readFileSync(ServeUrl)})[1]\r\n            else\r\n                Response.code = 404\r\n            end\r\n        end\r\n\r\n        ServeFiles(Path.join(Root, Url))\r\n    end\r\nend",
      "Type":"Code"
    },
    "ga.corebyte.Server.Main":{
      "Code":"local App = require('weblit-app')\r\np(\"a\")\r\np(TypeWriter.ArgumentParser:GetArgument(\"serverargs\", \"serverargs\"))\r\nlocal Arguments = require(\"json\").decode(require(\"base64\").decode(TypeWriter.ArgumentParser:GetArgument(\"serverargs\", \"serverargs\")))\r\np(\"b\")\r\n\r\nApp.bind(\r\n    {\r\n        host = Arguments.Host,\r\n        port = Arguments.Port\r\n    }\r\n)\r\n\r\nApp.use(\r\n    Import(\"ga.corebyte.Server.Static\")(\r\n        Arguments.Path\r\n    )\r\n)\r\n\r\nApp.start()",
      "Type":"Code"
    },
    "ga.corebyte.Server":{
      "Type":"Redirect",
      "RedirectTo":"ga.corebyte.Server.Main"
    }
  },
  "Resources":{
    "/package.info.lua":"-- See https://github.com/Dot-lua/TypeWriter/wiki/package.info.lua-format for more info\r\n\r\nreturn { InfoVersion = 1, -- Dont touch this\r\n\r\n    ID = \"Static-Server\", -- A unique id \r\n    Name = \"Static-Server\",\r\n    Description = \"Static\",\r\n    Version = \"1.0.0\",\r\n\r\n    Author = {\r\n        Developers = {\r\n            \"CoreByte\"\r\n        },\r\n        Contributors = {}\r\n    },\r\n\r\n    Dependencies = {\r\n        Luvit = {\r\n            \"creationix/weblit\",\r\n            \"creationix/coro-spawn\",\r\n            \"creationix/mime\",\r\n            \"luvit/json\",\r\n            \"creationix/base64\"\r\n        },\r\n        Git = {},\r\n        Dua = {}\r\n    },\r\n\r\n    Contact = {\r\n        Website = \"\",\r\n        Source = \"\",\r\n        Socials = {}\r\n    },\r\n\r\n    Entrypoints = {\r\n        Main = \"ga.corebyte.Server\"\r\n    }\r\n\r\n}\r\n"
  }
}